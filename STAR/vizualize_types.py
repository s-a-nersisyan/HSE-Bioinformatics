import sys
import os

import pandas as pd
import numpy as np

import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages


counts_path = sys.argv[1]
ENSG_GeneSymbol_path = sys.argv[2]  # File generated by make_ensg_gene_symbol_table.bash scipt

df = pd.read_csv("{}/counts.tsv".format(counts_path), sep="\t", index_col=0)

df_annot = pd.read_csv(ENSG_GeneSymbol_path, sep="\t", index_col=0)
df_annot = df_annot.drop_duplicates()
df_annot["Type"] = ["mitochondrion" if g.startswith("MT") else t for g, t in zip(df_annot["Gene"], df_annot["Type"])]
df_annot["Type"] = ["ribosome" if g.startswith("RP") else t for g, t in zip(df_annot["Gene"], df_annot["Type"])]
df_annot = df_annot.set_index("Gene")

df = df.join(df_annot)

pdf = PdfPages('{}/summary.pdf'.format(counts_path))
for sample in df.columns[:-1]:
    summary = df[[sample, "Type"]].groupby("Type").sum()
    summary[sample] /= sum(summary[sample]) / 100
    summary = summary.sort_values(sample, ascending=False).reset_index()
    summary = summary.loc[summary[sample] >= 0.1]
    
    plt.figure()
    sns.barplot(x="Type", y=sample, data=summary)
    plt.xticks(rotation="45")
    plt.ylim([0, 100])
    plt.tight_layout()
    pdf.savefig()

pdf.close()
